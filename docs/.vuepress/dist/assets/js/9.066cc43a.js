(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{173:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"数据迁移工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据迁移工具","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据迁移工具")]),t._v(" "),s("p",[t._v("huiche基于QuerDsl提供了一个数据迁移工具"),s("code",[t._v("DataTransfer")]),t._v(",它可能没有多么的"),s("code",[t._v("智能")]),t._v("和"),s("code",[t._v("快速")]),t._v(",但可以方便的进行新老数据的转换,所以他的优点在于"),s("code",[t._v("灵活")]),t._v("(当新旧的数据结构没有什么改变或改变很少时,建议还是由其他数据导入工具进行快速导入),原理就是简单的把原有数据查询出来,然后根据mapper(自行实现),转换为新的数据然后批量插入.")]),t._v(" "),s("h2",{attrs:{id:"数据迁移构造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据迁移构造","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据迁移构造")]),t._v(" "),s("p",[t._v("现在默认提供3种方式构造,需要分别提供source源数据表和target目标数据库,(理论上支持大部分主流数据库,但目前仅对MySql进行了大量测试)")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("构造参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SqlQueryFactory")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("QueryDsl依赖的sql查询工厂")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("DataSource")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据源连接池")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("url/user/pwd")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("jdbc连接的url,用户名,密码")])])])]),t._v(" "),s("h2",{attrs:{id:"数据迁移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据迁移","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据迁移")]),t._v(" "),s("p",[t._v("构造"),s("code",[t._v("DataTransfer")]),t._v("之后,即可执行"),s("code",[t._v("transfer")]),t._v("进行数据迁移,它提供了多个重载以方便使用,下面仅对全部参数的方法进行介绍")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataTransfer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @param srcTablePath      源表 path\n     * @param srcQueryPredicate 源表过滤条件\n     * @param targetTablePath   目标表 path\n     * @param mapper            数据转换mapper\n     * @param size              每次处理多少条数据\n     * @param <S>               源类型\n     * @param <T>               目标类型\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        RelationalPath"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" srcTablePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        Predicate srcQueryPredicate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        RelationalPath"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" targetTablePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        Function"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" mapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);a.default=n.exports}}]);